apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.service.type: LoadBalancer
    kompose.version: 1.30.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: app
  name: app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.service.type: LoadBalancer
        kompose.version: 1.30.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/sidekiqrails-default: "true"
        io.kompose.service: app
    spec:
      containers:
        - env:
            - name: DATABASE_HOST
              value: C02XD2USJG5M
            - name: DATABASE_NAME
              value: sidekiqrails_development
            - name: DATABASE_PASSWORD
              value: shark
            - name: DATABASE_USER
              value: postgres
            - name: RAILS_ENV
              value: development
            - name: REDIS_HOST
              value: C02XD2USJG5M
            - name: REDIS_PORT
              value: "6379"
          image: sidekiqrails_app:latest
          imagePullPolicy: IfNotPresent
          name: app
          ports:
            - containerPort: 3000
              hostPort: 3000
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}
